[project]
name = "internum"
version = "0.1.0"
description = ""
authors = [{ name = "Pedro Nora", email = "pedro@nora.vc" }]
readme = "README.md"
requires-python = ">=3.13, <4.0"
dependencies = [
    "fastapi[standard] (>=0.116.1,<0.117.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "sqlalchemy[asyncio] (>=2.0.43,<3.0.0)",
    "psycopg[binary] (>=3.2.9,<4.0.0)",
    "alembic (>=1.16.5,<2.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "pwdlib[argon2] (>=0.2.1,<0.3.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.7"
commitizen = "^4.8.3"
pytest-asyncio = "^1.1.0"
factory-boy = "^3.3.3"
testcontainers = "^4.13.0"
freezegun = "^1.5.5"

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'bash internum/infra/orchestrate.sh'
servicesUp = 'docker compose -f internum/infra/compose.yaml up -d'
servicesStop = 'docker compose -f internum/infra/compose.yaml stop'
servicesDown = 'docker compose -f internum/infra/compose.yaml down'
test = 'pytest -s -x --cov=internum -vv'
commit = 'cz commit'

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]
